---
// SearchResultItem.astro - Component for displaying search results
interface Props {
  title: string;
  description: string;
  image: string;
  imageAlt: string;
  url: string;
  date: Date;
  category: string;
  author: string;
  authorImage: string;
  authorImageAlt: string;
  readingTime?: string;
  tags?: string[];
  highlightedTerms?: string[];
}

const {
  title,
  description,
  image,
  imageAlt,
  url,
  date,
  category,
  author,
  authorImage,
  authorImageAlt,
  readingTime,
  tags = [],
  highlightedTerms = []
} = Astro.props;

// Format date
const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'short',
  day: 'numeric'
}).format(date);

// Highlight search terms in title and description if provided
function highlightText(text, terms) {
  if (!terms.length) return text;

  let highlighted = text;
  terms.forEach(term => {
    if (!term.trim()) return;

    const regex = new RegExp(`(${term})`, 'gi');
    highlighted = highlighted.replace(regex, '<mark class="bg-yellow-100 text-gray-900 rounded px-1">$1</mark>');
  });

  return highlighted;
}

const highlightedTitle = highlightedTerms.length ? highlightText(title, highlightedTerms) : title;
const highlightedDescription = highlightedTerms.length ? highlightText(description, highlightedTerms) : description;
---

<article class="search-result bg-white rounded-lg overflow-hidden shadow-md transition-transform duration-300 hover:shadow-lg hover:-translate-y-1 mb-6">
  <a href={url} class="block">
    <div class="md:flex">
      <div class="md:w-1/3 relative">
        <div class="relative pb-[56.25%] md:pb-0 md:h-full">
          <img
            src={image}
            alt={imageAlt}
            class="absolute inset-0 w-full h-full object-cover"
            loading="lazy"
          />
          <span class="absolute top-2 right-2 bg-blue-600 text-white text-xs font-semibold px-2 py-1 rounded">
            {category}
          </span>
        </div>
      </div>

      <div class="p-5 md:w-2/3">
        <h2 class="text-xl font-bold text-gray-800 mb-2 hover:text-blue-600 transition-colors duration-200" set:html={highlightedTitle} />

        <p class="text-gray-600 text-sm mb-4" set:html={highlightedDescription} />

        {tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mb-4">
            {tags.map(tag => (
              <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">
                {tag}
              </span>
            ))}
          </div>
        )}

        <div class="flex items-start mt-4">
          <img
            src={authorImage}
            alt={authorImageAlt}
            width="32"
            height="32"
            class="w-8 h-8 rounded-full mr-3 object-cover"
            loading="lazy"
          />
          <div>
            <p class="text-sm font-medium text-gray-900">{author}</p>
            <p class="text-xs text-gray-500">
              {formattedDate}
              {readingTime && <span> Â· {readingTime}</span>}
            </p>
          </div>
        </div>
      </div>
    </div>
  </a>
</article>
