---
// AuthorInfo.astro - Component for displaying author information
interface Props {
  name: string;
  bio: string;
  image: string;
  imageAlt: string;
  pubDate: Date;
  modDate: Date;
  readingTime?: string;
}

const { name, bio, image, imageAlt, pubDate, modDate, readingTime } = Astro.props;

// Format dates for display
const formattedPubDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}).format(pubDate);

const formattedModDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}).format(modDate);

const isUpdated = pubDate.toDateString() !== modDate.toDateString();
---

<div class="author-info bg-gray-50 rounded-lg p-6 my-8 shadow-sm">
  <div class="flex items-center gap-4 mb-4">
    <img
      src={image}
      alt={imageAlt}
      width="64"
      height="64"
      class="rounded-full object-cover w-16 h-16 border-2 border-blue-500"
      loading="lazy"
    />
    <div>
      <p class="font-bold text-lg text-gray-800">{name}</p>
      <div class="text-sm text-gray-600 space-y-1">
        <p>
          <span class="font-medium">Published:</span> {formattedPubDate}
          {isUpdated && <span class="ml-1 text-green-600 font-medium">(Updated: {formattedModDate})</span>}
        </p>
        {readingTime && <p class="inline-flex items-center gap-1">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
          </svg>
          {readingTime}
        </p>}
      </div>
    </div>
  </div>
  <div class="prose prose-sm max-w-none text-gray-700">
    <p>{bio}</p>
  </div>
</div>

<style>
  .author-info {
    border-left: 4px solid #3b82f6;
  }

  @media (max-width: 640px) {
    .author-info {
      padding: 1rem;
    }
  }
</style>
